---
import { StackDrawer } from '../../../components/organisms/drawer/stack-drawer'
import { ENV } from '../../../constants/env'
import { getAllStackWithRelationsAndProjectsMin } from '../../../services/stack/getAllStackWithRelationsAndProjectsMin'
import { getStackWithRelationsAndProjectsMinByKey } from '../../../services/stack/getStackWithRelationsAndProjectsMinById'
import Base from '../index.astro'

export async function getStaticPaths() {
  const stacks = await getAllStackWithRelationsAndProjectsMin()

  const paths = stacks.map(stack => ({
    params: { key: stack.key },
    props: stack
  }))

  return paths
}

let stack
if (ENV.isServerSideEnable) {
  stack = await getStackWithRelationsAndProjectsMinByKey({
    key: Astro.params.key
  })
} else {
  stack = Astro.props
}

if (!stack) {
  return {
    status: 404,
    error: new Error('Stack not found')
  }
}
---

<Base />
<StackDrawer
  stack={stack}
  drawerProps={{
    defaultOpen: true
  }}
  returnToSiteOnClose={{
    site: '/stack',
    keepState: true
  }}
  client:load
/>
