---
import { StackDrawer } from '@/components/organisms/drawer/stack-drawer'
import { ENV } from '@/constants/env'
import { getAllStack } from '@/services/stack/getAllStack'
import { getStackByKey } from '@/services/stack/getStackByKey'
import Base from '../index.astro'
import { getAllProjectsRelatedWithStack } from '@/services/project/getAllProjectsRelatedWithStack'

export async function getStaticPaths() {
  const stacks = await getAllStack()

  const paths = stacks.map(stack => ({
    params: { key: stack.key },
    props: stack
  }))

  return paths
}

let stack
if (ENV.isServerSideEnable) {
  stack = await getStackByKey({
    key: Astro.params.key
  })
} else {
  stack = Astro.props
}

if (!stack) {
  return {
    status: 404,
    error: new Error('Stack not found')
  }
}

const relatedProjects = await getAllProjectsRelatedWithStack({
  idStack: stack.id
})
---

<Base />
<StackDrawer
  stack={stack}
  associatedProjects={relatedProjects}
  drawerProps={{
    defaultOpen: true
  }}
  returnToSiteOnClose={{
    site: '/stack',
    keepState: true
  }}
  client:load
/>
