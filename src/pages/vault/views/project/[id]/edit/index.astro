---
import Layout from '../../../../../../components/layouts/base.astro'
import { DashboardLayout } from '../../../../../../components/layouts/dashboard-layout'
import { UpdateProjectForm } from '../../../../../../components/organisms/form/update-project'
import { DASHBOARD_BREADCRUMB_TEMPLATE } from '../../../../../../constants/breadcrumb'
import { ENV } from '../../../../../../constants/env'
import { getAvailableCollaboratorsToAddRelationshipToProject } from '../../../../../../services/collaborator/getAvailableCollaboratorsToAddRelationshipToProject'
import { getAllProjectsWithStackAndCollaborators } from '../../../../../../services/project/getAllProjectsWithStackAndCollaborators'
import { getAvailableStacksToAddRelationshipToProject } from '../../../../../../services/stack/getAvailableStacksToAddRelationshipToProject'

export async function getStaticPaths() {
  const projects = await getAllProjectsWithStackAndCollaborators()

  const paths = projects.map(stack => ({
    params: { id: stack.id },
    props: stack
  }))

  return paths
}

const project = Astro.props
const availableStacks = await getAvailableStacksToAddRelationshipToProject({
  idProject: project.id
})
const availableCollaborators =
  await getAvailableCollaboratorsToAddRelationshipToProject({
    idProject: project.id
  })
---

<Layout title="Editar de proyecto">
  <DashboardLayout
    breadcrumb={DASHBOARD_BREADCRUMB_TEMPLATE['/vault/views/project/edit']}
    client:load
  >
    <main class="w-full h-full flex flex-col pt-7 pl-7 container mx-auto gap-5">
      <h1 class="text-4xl font-medium">Editar de Proyecto</h1>
      <UpdateProjectForm
        currentProject={project}
        availableStacks={availableStacks}
        availableCollaborators={availableCollaborators}
        disableForm={ENV.isProduction}
        client:load
      />
    </main>
  </DashboardLayout>
</Layout>
