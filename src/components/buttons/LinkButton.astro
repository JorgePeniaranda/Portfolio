---
interface Props {
  url: string;
  target?: string;
  rel?: string;
  width?: "min" | "max" | "fit" | "full" | number;
}
const { url, target, rel, width } = Astro.props;
---

<a
  href={url}
  target={target}
  rel={rel}
  class:list={[
    Astro.props.width === "min" && "w-min",
    Astro.props.width === "max" && "w-max",
    Astro.props.width === "fit" && "w-fit",
    Astro.props.width === "full" && "w-full",
    typeof Astro.props.width === "number" && `w-${width}`,
  ]}
  ]}
>
  <slot />
</a>
<style>
  a {
    margin-top: 1.25rem;
    padding: 0.5rem 1.5rem;
    user-select: none;
    text-align: center;
    font-weight: 600;
    border-radius: 0.375rem;
    background-color: var(--primary-light);
    color: var(--primary-dark);
    transition: all 0.3s;
  }

  a:hover {
    transform: scale(1.1);
  }

  /* Darkmode */
  html.dark a {
    background-color: var(--primary-dark);
    color: var(--primary-light);
  }
</style>
