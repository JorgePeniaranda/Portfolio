---
interface Props {
  type?: "submit" | "reset" | "button" | null | undefined;
  width?: "min" | "max" | "fit" | "full" | number;
}
const { type, width } = Astro.props;
---

<button
  type={type}
  class:list={[
    width === "min" && "w-min",
    width === "max" && "w-max",
    width === "fit" && "w-fit",
    width === "full" && "w-full",
    typeof width === "number" && `w-${width}`,
  ]}
  ]}
>
  <slot />
</button>
<style>
  button {
    background-color: var(--primary-dark);
    color: var(--primary-light);
    margin-top: 1.25rem;
    padding: 0.5rem 1.5rem;
    user-select: none;
    text-align: center;
    font-weight: 600;
    border-radius: 0.375rem;
    transition: all 0.3s;
  }

  button:hover {
    transform: scale(1.05);
  }

  /* Darkmode */
  html.dark button {
    background-color: var(--primary-light);
    color: var(--primary-dark);
  }
</style>
