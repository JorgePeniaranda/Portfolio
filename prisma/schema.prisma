generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProjectStatus {
  FINISHED
  IN_PROGRESS
  STALLED
}

enum StackCategory {
  FRONT_END
  BACK_END
  FULL_STACK
}

enum StackType {
  LANGUAGE
  FRAMEWORK
  LIBRARY
  DATABASE
  TOOL
}

model Project {
  id                      Int            @id @default(autoincrement())
  key                     String         @unique
  name                    String
  status                  ProjectStatus
  stackCategory           StackCategory
  startDate               DateTime       @map("start_date")
  endDate                 DateTime?      @map("end_date")
  description             String
  goals                    String
  contributions            String
  logoUrl                 String         @map("logo_url")
  primaryColor            String         @map("primary_color")
  demoUrl                 String?        @map("demo_url")
  githubUrl               String?        @map("github_url")
  associatedStacks        Stack[]        @relation("StackAssociatedToProjects")
  associatedCollaborators Collaborator[] @relation("CollaboratorsAssociatedToProjects")
  createdAt               DateTime       @default(now()) @map("created_at")
  updatedAt               DateTime       @default(now()) @updatedAt @map("updated_at")
}

model Stack {
  id                 Int            @id @default(autoincrement())
  key                String         @unique
  name               String
  description        String
  category           StackCategory?
  type               StackType?
  iconUrl            String         @map("icon_url")
  associatedProjects Project[]      @relation("StackAssociatedToProjects")
  relatedFrom        RelatedStack[] @relation("RelatedStacksFrom")
  relatedTo          RelatedStack[] @relation("RelatedStacksTo")
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @default(now()) @updatedAt @map("updated_at")
}

model RelatedStack {
  id             Int   @id @default(autoincrement())
  fromStack      Int   @map("from_stack")
  toStack        Int   @map("to_stack")
  fromStackStack Stack @relation("RelatedStacksFrom", fields: [fromStack], references: [id])
  toStackStack   Stack @relation("RelatedStacksTo", fields: [toStack], references: [id])
}

model Collaborator {
  id                 Int       @id @default(autoincrement())
  nickname           String    @unique
  githubUsername     String?   @map("github_username")
  linkedinUsername   String?   @map("linkedin_username")
  associatedProjects Project[] @relation("CollaboratorsAssociatedToProjects")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @updatedAt @map("updated_at")
}
